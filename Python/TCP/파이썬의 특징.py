"""
파이썬의 특징

간결한 코드

파이썬은 본래 교육용으로 만들어진 언어로, 코드가 간결하고 알아보기 쉽습니다.
문법도 사람의 사고방식과 유사하여 코딩하는 과정이 마치 영작을 하는 과정처럼 느껴질 정도입니다.
다음은 프로그래밍 언어별로 같은 동작을 수행하는 코드의 예입니다.

C++		

int *array = new int[3];

array[0] = 1;

array[1] = 3;

array[2] = 5;

Java

int [] array = new int[3];

array[0] = 1;

array[1] = 3;

array[2] = 5;

Python

array = [1,3,5]

들여쓰기(Indentation)

파이썬은 코드의 들여쓰기로 블록(block)을 구분합니다.
이는 다른 언어들과 구분되는 파이썬만이 가지는 독특한 특징 중 하나로, 들여쓰기가 달라지면 다른 블록으로 인식합니다. 
이 방식은 같은 동작을 수행하는 코드가 좀 더 일관된 모습으로 구성되므로, 다른 사람이 작성한 코드를 좀 더 쉽게 읽을 수 있게 해줍니다.
3의 배수를 10개 구하는 파이썬 코드는 대부분 아래 예제와 비슷한 구조를 가지게 됩니다.
"""

"""
예제
"""

for i in range(10):

    print(i*3)

"""
블록(block)이라 함은 작업공간을 의미하며, 다른 블록에 작성된 코드의 내용은 서로에게 영향을 주지 않습니다.
C/C++ 이나 Java와 같은 경우에는 중괄호( { } )를 사용하여 블록을 구분하기 때문에 중괄호의 위치에 따라 다양한 모양의 코드를 작성할 수 있습니다.
    
인터프리터(Interpreter) 언어
    
파이썬은 기본적으로 인터프리터(해석기) 위에서 실행되는 언어입니다.
이러한 인터프리터 언어는 프로그램의 코드가 한 라인씩 순서대로 해석되고 실행되기를 반복합니다. 
따라서 코드가 완전히 작성되지 않아도 작성된 부분까지 테스트를 위해 실행이 가능합니다.
인터프리터 언어는 운영체제에 독립적이므로 윈도우 환경 뿐만 아니라 Mac, Linux 상에서도 실행이 가능합니다.
하지만 아직 파이썬 인터프리터가 없는 안드로이드(android)나 ios 환경에서는 동작하지 않습니다.

멀티 패러다임

프로그래밍 패러다임은 크게 절차지향, 객체지향 그리고 함수형 패러다임으로 나눌 수 있는데 파이썬은 이 세 가지 패러다임를 모두 구현할 수 있습니다.
절차지향 패러다임의 대표적인 프로그래밍 언어에는 C언어가 있으며, 객체지향 패러다임 언어에는 Java가 있습니다.
또한, 함수형 패러다임 언어에는 LISP 등이 있습니다.
하지만 파이썬은 이런 패러다임에 구애받지 않고 상황에 맞는 유연한 코딩이 가능합니다.
"""