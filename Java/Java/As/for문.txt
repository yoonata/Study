for 문



반복문들 중에서 가장 많이 사용되는 for 문의 구문은 다음과 같다.



for (초기문; 조건식; 반복 후 작업) {

작업문

..

}







1. 초기문



for 문의 초기문에서는 대개 for 문의 조건식에서 사용하는 변수를 초기화한다.



초기문의 특징을 나열하면 다음과 같다.

1) 초기문은 시작할 때 한 번만 수행된다.

2) 콤마(,)로 분리하여 여러 문장을 나열할 수 있다.

3) 초기문을 빈 상태로 두어도 된다.



i.e.

int i = 0;

for ( ; i < 10; i++) { //빈 초기문

......

}

int j, k;

for (j = 0, k = 0; j <10; j++) { // 콤마를 이용해서 분리시키기

...

}







2. 조건식



조건식에는 논리형 변수나 논리 연산만을 사용할 수 있다. 조건식의 결과가 true인 경우에 반복이 계속되며 false의 경우에 반복을 종료하고 for 문을 벗어난다. for 문 내에 있는 작업 문장을 수행하기 전에 조건식이 검사되므로 첫 번째 수행이라도 조건식이 false 이면 바로 반복문을 벗어난다.



즉, 조건식에 true를 적으면 끝나지 않는 무한 루프(infinite loop)가 생기게 된다.

또한, 조건식이 비어 있는 경우에도 이를 true로 간주하고 무한 루프를 생성한다.



i.e.

for (i=0; true; i++) { //무한 루프

......

}



for (i=0; ; i++) { // 빈 조건식 -> 무한 루프

......

}







3. 반복 후 작업



for 문 내의 작업문이 실행된 후 반복 후 작업문이 실행된다. 반복 후 작업문 역시 콤마(,)로 분리하여 여러 문장을 나열할 수 있다.



i.e.

// 아래의 코드에서 처럼 초기문 부분에서 변수를 선언할 수 있다. 여기서 선언한 변수는 for 문 안에서만 사용이 가능하다. (범위가 for 문 내부)

for (int i=0; i < 10; i++, System.out.println(i) ) { // 반복 후 작업문을 콤마로 분리하여 여러 문장을 나열

......

}







4. 작업문



작업문은 for 문이 반복되는 동안 수행된다. 작업문이 하나의 자바 문장으로만 구성되는 경우 '{' 와 '}'가 필요 없지만 여러 문장으로 구성되는 경우 반드시 '{'와 '}'가 필요 없지만 여러 문장으로 구성되는 경우 반드시 '{'와 '}'로 묶어야 한다.

