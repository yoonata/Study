continue 문과 break 문





반복문이 실행되는 동안 작업문 내에 continue 문이나 break 문을 이용하여 반복의 흐름을 변경할 수 있다. break 문은 반복문을 벗어나기 위해 사용되며 continue 문은 반복을 한 번 건너뛰기 위해 사용된다.





1. continue 문



continue 문은 반복문을 완전히 빠져나가지 않으면서 반복문 내의 작업문을 건너뛸때 사용한다. 작업문 실행 도중 다음 반복으로 진행하는 효과가 있다. 예시를 통해서 자세히 알아보도록 하자.



i.e.



int sum = 0;



for (int i = 0; i <= 100; i++) { //0~100까지 반복



if (i%2 == 1) { //홀수일 경우

continue; //홀수일 경우에는 계속 반복



} else { //홀수가 아닐 경우 (짝수일 경우)

sum = sum += i; //짝수일 경우, sum의 값에 i의 값을 더한다.

}

System.out.println("짝수!");

}



위의 예시에서 i의 값이 홀수일 때에는 조건문 안에 있는 continue 문에 의해서 아래의 작업을 건너뛰고 계속 반복문을 반복하게 된다. 그러므로, 조건문 바로 아래에 있는 "System.out.println("짝수!");"는 무시되고, 반복문을 계속 반복하게 된다.  반대로, 홀수가 아닐 때, 즉, 짝수일 경우에는 sum의 값에 i의 값을 더한 뒤, "System.out.println("짝수!");"를 실행시키고 계속 반복문을 돌리게 된다.







2. break 문



break 문은 continue 문과 달리 즉시 반복문을 빠져 나갈 때 사용한다.



break 문을 만나면 반복문을 벗어나 실행이 진행된다. break 문은 하나의 반복문만 벗어나기 때문에 중첩 반복의 경우 안쪽 반복문이 break 문을 포함하고 있으면 안쪽 반복문만 벗어나며 바깥 쪽 반복문 내에서 실행이 유지된다.


