증감 연산자
증감 연산자(increment and decrement operators)
증감 연산자는 피연산자를 1씩 증가 혹은 감소시킬 때 사용하는 연산자입니다.

이 연산자는 피연산자가 단 하나뿐인 단항 연산자입니다.

 

증감 연산자는 해당 연산자가 피연산자의 어느 쪽에 위치하는가에 따라 연산의 순서 및 결과가 달라집니다.

증감 연산자	설명
++x	먼저 피연산자의 값을 1 증가시킨 후에 해당 연산을 진행함.
x++	먼저 해당 연산을 수행하고 나서, 피연산자의 값을 1 증가시킴.
--x	먼저 피연산자의 값을 1 감소시킨 후에 해당 연산을 진행함.
x--	먼저 해당 연산을 수행하고 나서, 피연산자의 값을 1 감소시킴.
 

예제
int num1 = 7, num2 = 7;

int result1, result2;

 

result1 = --num1 + 4;

result2 = num2-- + 4;

 

System.out.println("전위 감소 연산자에 의한 결과 : "+ result1 + ", 변수의 값 : " + num1);

System.out.println("후위 감소 연산자에 의한 결과 : "+ result2 + ", 변수의 값 : " + num2);

코딩연습 ▶

실행 결과
전위 감소 연산자에 의한 결과 : 10, 변수의 값 : 6

후위 감소 연산자에 의한 결과 : 11, 변수의 값 : 6

 

위의 예제에서 첫 번째 연산은 변수 num1의 값을 먼저 1 감소시킨 후에 나머지 연산을 수행합니다.

하지만 두 번째 연산에서는 먼저 모든 연산을 마친 후에 변수 num2의 값을 1 감소시킵니다.

따라서 변수 num2의 감소 연산자는 전체 연산에 어떠한 영향도 미치지 않습니다.

증감 연산자의 연산 순서
증감 연산자는 피연산자의 어느 쪽에 위치하는가에 따라 연산의 순서가 달라집니다.

 

다음 예제는 증감 연산자의 연산 순서를 살펴보기 위한 예제입니다.

예제
int x = 10;

int y = x-- + 5 + --x;

 

System.out.println("x : "+ x + ", y : " + y);

코딩연습 ▶

실행 결과
x : 8, y : 23

 

다음 그림은 위의 예제에서 수행되는 연산의 순서를 보여줍니다.

증감 연산자의 연산 순서

① : 첫 번째 감소 연산자(decrement operator)는 피연산자의 뒤쪽에 위치하므로, 덧셈 연산이 먼저 수행됩니다.

② : 덧셈 연산이 수행된 후에 감소 연산이 수행됩니다. (x의 값 : 9)

③ : 두 번째 감소 연산자는 피연산자의 앞쪽에 위치하므로, 덧셈 연산보다 먼저 수행됩니다. (x의 값 : 8)

④ : 감소 연산이 수행된 후에 덧셈 연산이 수행됩니다.

⑤ : 마지막으로 변수 y에 결괏값의 대입 연산이 수행됩니다. (y의 값 : 23)